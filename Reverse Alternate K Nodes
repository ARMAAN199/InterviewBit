/**
 * Definition for singly-linked list.
 * class ListNode {
 *     public int val;
 *     public ListNode next;
 *     ListNode(int x) { val = x; next = null; }
 * }
 */
public class Solution {
   public ListNode solve(ListNode head, int k) {
        if(head==null || head.next==null){
			return head;
		}
		int count=0;
		ListNode prev = null;
		ListNode curr = head;
		ListNode next = null;
		
		while(count < k && curr!=null) {
			next = curr.next;
			curr.next = prev;
			prev = curr;
			curr = next;
			count++;
		}
        if(head!=null){
            head.next = curr;
        }
        count=0;
        while(count < k-1 && curr!=null) {
            curr = curr.next;
            count++;
        }
        if(curr != null) {
            curr.next = solve(curr.next,k);
        }
        return prev;
    }
}
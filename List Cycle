/**
 * Definition for singly-linked list.
 * class ListNode {
 *     public int val;
 *     public ListNode next;
 *     ListNode(int x) { val = x; next = null; }
 * }
 */
public class Solution {
	public ListNode detectCycle(ListNode head) {
        ListNode slow = head;
        ListNode fast = head;
        int flag =0;
        while(fast!=null && fast.next!=null)
        {
            slow=slow.next;
            fast=fast.next.next;
            if(fast == slow)
            {
                flag=1;
                break;
            }
        }
        if(flag == 0) return null;
        ListNode temp = head;
        while(temp!=slow)
        {
            temp= temp.next;
            slow = slow.next;
        }
        return slow;
	}
}
